<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Filipe Mendes</title>
    <link>https://fmendes6.com/posts/</link>
    <description>Recent content in Posts on Filipe Mendes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>MIT</copyright>
    <lastBuildDate>Sun, 01 Nov 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://fmendes6.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A hopeful shift</title>
      <link>https://fmendes6.com/posts/20-04-20_hopeful_shift/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://fmendes6.com/posts/20-04-20_hopeful_shift/</guid>
      <description>&lt;p&gt;I believe there is still “some” degree of innovation in both Android and iOS platforms with each release. However, software companies can’t seem to keep the pace, and not all developers know what’s new (&lt;a href=&#34;https://translate.google.com/translate?sl=pt&amp;amp;tl=en&amp;amp;u=https%3A%2F%2Fopinioes.online%2Fpost%2Fagosto2020-android%2F%23futuro&#34;&gt;myself included&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The mobile applications market has stagnated. The competition reached a point where even multi-million dollar companies or highly funded startups hardly have a chance to have their apps discoverable in the app stores, let alone achieve the top 10 of most downloaded apps.&lt;/p&gt;
&lt;p&gt;The return of investment for most companies in regards to their mobile apps is probably low, especially when such apps do not take full advantage of what mobile brings to the table. As my former lead Rui Teixeira once told me, “&lt;em&gt;mobile apps are now a commodity&lt;/em&gt;” in the sense that apps are part of a product’s offering but not really at the core of their strategy.&lt;/p&gt;
&lt;h2 id=&#34;a-cross-platform-solution&#34;&gt;A cross-platform solution&lt;/h2&gt;
&lt;p&gt;The current state of the industry has led to an increasing number of companies adopting cross-platform solutions, and my current employer is no exception. As a result, I have now worked in react native for two months.&lt;/p&gt;
&lt;p&gt;I can see some interesting technical benefits (fast refresh, testing tools) in our current solution, and how it seems to fulfil every business’s dream of “&lt;em&gt;Write once, run anywhere&lt;/em&gt;” even though that’s not what &lt;a href=&#34;https://engineering.fb.com/2015/03/26/android/react-native-bringing-modern-web-techniques-to-mobile/&#34;&gt;Facebook endorses&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My little experience with React Native has shown me that some transitions between screens were not always consistent between platforms. That some screen states were hard to manage because the state was reused in previously closed screens, and some react hooks made things harder than they were supposed to be. Plus, there were situations where certain HTML elements could have (and had) &lt;a href=&#34;https://reactnative.dev/docs/accessibility/&#34;&gt;properties&lt;/a&gt; that only existed in one of the platforms.&lt;/p&gt;
&lt;p&gt;To be fair, the first two issues were probably an implementation problem and not a react native limitation. But it shows how easy it is to go over fundamental mobile constraints when you develop and test in one platform but deploy for several at the same time. I dreaded moments of “&lt;em&gt;it works on android but not iOS&lt;/em&gt;”, but to be honest, in a “component-oriented” project, once these were implemented and properly tested, issues tended to be quite rare.&lt;/p&gt;
&lt;p&gt;In regards to the user experience, the UI had to be considerably toned down and made blander to ship a less platform focused and more “generic” UI. You would argue that React Native enables us to have a dedicated UI for each platform, but if that were a requirement, you probably wouldn’t have adopted React Native in the first place.&lt;/p&gt;
&lt;p&gt;The same applies to the argument that you can leverage the native modules and import native code. React Native indeed provides a way for you to do it, but I would argue most teams will try to use existing 3rd party React Native libraries that offer the same functionality since most projects will not have access to native engineers that can implement that native code. Plus, let’s not forget the cost of its maintenance in the long run.&lt;/p&gt;
&lt;p&gt;Adopting React Native also brings the possibility of hiring full-stack developers to work on the mobile world. However, the resulting product will most certainly have an impact on your app’s user experience because not all these developers know the constraints and expected usability that a mobile environment requires.&lt;/p&gt;
&lt;h2 id=&#34;a-choice-to-be-made&#34;&gt;A choice to be made&lt;/h2&gt;
&lt;p&gt;Budget, hiring, maintenance, long term strategy and the nature of the product itself, matter more than any opinion you can read on the internet or hear in the corridors of your office.&lt;/p&gt;
&lt;p&gt;I am sure cross-platforms solutions like React Native, have its place in the market, and a lot of companies would do a right decision by adoption it, but I don’t think it is the solution for the future and to some extent even the present, of a lot of mobile apps. But for the sake of it:&lt;/p&gt;
&lt;p&gt;Cross-platform is a valid option if either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Your app is just an extension of a bigger product offering;&lt;/li&gt;
&lt;li&gt;Your app is only used a couple of times a month;&lt;/li&gt;
&lt;li&gt;You need to hit the market on all platforms as soon as possible.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When it comes to native, it should be preferred if either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Your app is used every day;&lt;/li&gt;
&lt;li&gt;Your app has a complex, elaborate and dedicated user experience;&lt;/li&gt;
&lt;li&gt;Your app is at the core of your product offering (ex: Monzo, Revolut, Uber)&lt;/li&gt;
&lt;li&gt;You have high technical requirements (ex: performance, app size, etc.).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a user, ask yourself. Can you tell the difference in experience between native and cross-platform apps? Probably not when it comes to Facebook apps, but I wonder about all the others.&lt;/p&gt;
&lt;h2 id=&#34;a-xamarin-experience&#34;&gt;A Xamarin experience&lt;/h2&gt;
&lt;p&gt;Debuted in 2011, Xamarin sits near PhoneGap, React Native and so many others in the fight between native and cross-platform. Although that is technically correct, there is a significant distinction to be made.&lt;/p&gt;
&lt;p&gt;Old school Xamarin was cross-platform in the infrastructure and business logic but not in the UI layer. For the UI layer, you would have to know the Android Framework and C#, which meant that as an android developer, I was not able to develop an iOS app. Cross-platform UI became possible only later on with the arrival of Xamarin.Forms.&lt;/p&gt;
&lt;p&gt;This distinction between UI and business logic is an important detail because it enabled unusual team structures.&lt;/p&gt;
&lt;p&gt;In the second year of my &lt;a href=&#34;https://fmendes6.com/posts/15-04-18_xamarin_ii/&#34;&gt;first professional experience&lt;/a&gt;, back in 2014, I was assigned to develop a mobile app for a client. This client wanted to distribute an app to its partners as quickly as possible, without spending time creating a middleware that could serve as an intermediary between its .NET core product and the app.&lt;/p&gt;
&lt;p&gt;Xamarin was a great solution because it enabled us to reuse domain knowledge and import .NET business logic assemblies into our app. This integration made even more sense when the client’s developer joined the project to work solely on the business rules in the language he was the most experienced with, C#.&lt;/p&gt;
&lt;p&gt;This structure made us architect the app in a clear separation between the android app (UI layer) and its business logic (a C# assembly). As the only person knowledgable of the Android Framework, I worked solely on the UI layer, the client’s developer on the business layer with vanilla C# and our intern, a CS graduate, would implement the local database in SQLite.&lt;/p&gt;
&lt;p&gt;Xamarin was great because in theory, if the company decided to develop an iOS app the next year, it could merely plug in the business logic assembly and only implement the UI layer.&lt;/p&gt;
&lt;p&gt;Unfortunately, it wasn’t all just bells and whistles. In the long run, we experienced many of the issues described by Pixplicity in their great &lt;a href=&#34;https://medium.com/pixplicity/why-we-are-not-cross-platform-developers-fd7ef70e976d&#34;&gt;Why we are not cross-platform developers&lt;/a&gt; blog post.&lt;/p&gt;
&lt;h2 id=&#34;a-new-hope&#34;&gt;A new hope&lt;/h2&gt;
&lt;p&gt;Kotlin and Kotlin Multiplatform SDK have recently revived the cross-platform debate, with JetBrains promising the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Kotlin Multiplatform Mobile (KMM) is an SDK that allows you to use the same business logic code in both iOS and Android applications.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On another blog post:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Android and iOS versions of an application often have a lot in common, but they can also differ significantly – especially in terms of their UI (…). At the same time, the application’s business logic, (…), is often identical. That’s why it’s natural to share some parts of an application across platforms while keeping other parts completely separate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;With KMM, you can (…) use a single codebase for the business logic of iOS and Android apps and write platform-specific code only where it’s necessary, to implement a native UI or when working with platform-specific APIs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;KMM has the same premise as Xamarin but with a key difference. There is a separation of concerns not only at a logical level but at a technological level as a whole. The business logic codebase can be imported in native projects, leveraging the best of both native and cross-platform worlds.&lt;/p&gt;
&lt;p&gt;But more interesting than that, it is possible to initiate this transition to KMM incrementally and over time, by starting with a few business logic unit tests or small domain modules. The continuous and incremental migration from Java code to Kotlin without stopping development and deployment was, in my opinion, one of the reasons why businesses let Android developers proceed with the change from Java to Kotlin.&lt;/p&gt;
&lt;h2 id=&#34;a-glimpse-into-the-future&#34;&gt;A glimpse into the future&lt;/h2&gt;
&lt;p&gt;By watching the past &lt;a href=&#34;https://kotlinlang.org/lp/event-14/&#34;&gt;Kotlin 1.4 Online event&lt;/a&gt;, and later the iPhone 12 announcement and how “incredible” 5G will be, I have started to imagine how all of these technologies could come together.&lt;/p&gt;
&lt;p&gt;Old are the days where iOS developers would mock Android developers for having to support so many form factors. The iOS devices landscape is becoming more diversified, and with it, greater care in usability is necessary.&lt;/p&gt;
&lt;p&gt;New forms of interaction like Virtual Reality and Augmented Reality, are now becoming possible in low-end devices and companies are starting to look into these to push innovation in their products.&lt;/p&gt;
&lt;p&gt;And so, I believe KMM can play a vital role in the future of mobile.&lt;/p&gt;
&lt;p&gt;I envision a near future where most android and iOS projects will migrate their business logic and infrastructure to KMM. This migration would generate a new type of developer called Kotlin Mobile Developer.&lt;/p&gt;
&lt;p&gt;Provided they know about the mobile environment and constraints, these developers would be responsible for implementing all the “mobile backend” in pure Kotlin. They would be responsible for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Defining the mobile domain model;&lt;/li&gt;
&lt;li&gt;Implementing the business logic;&lt;/li&gt;
&lt;li&gt;Implementing the network layer;&lt;/li&gt;
&lt;li&gt;Implementing the database layer and all its syncing algorithms;&lt;/li&gt;
&lt;li&gt;Managing the continuous integration and deployment of the app;&lt;/li&gt;
&lt;li&gt;Dealing with Security concerns;&lt;/li&gt;
&lt;li&gt;Defining all common interfaces/protocols for native platforms to implement in case of need to access specific platforms APIs;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Front-facing developers (Android and iOS) would then work closer to the design and research team and becoming even more specialised in providing a stellar user experience, leveraging all that native code has to offer. They would be responsible for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Implementing all the user interface;&lt;/li&gt;
&lt;li&gt;Creating more efficient and delightful animations;&lt;/li&gt;
&lt;li&gt;Exploring and incorporating VR and AR;&lt;/li&gt;
&lt;li&gt;Implementing accessibility;&lt;/li&gt;
&lt;li&gt;Leveraging the speed of internet connection like 5G to create new experiences.&lt;/li&gt;
&lt;li&gt;Implement the specific interfaces/protocols defined by the Kotlin Mobile Developers in case of need to access platform-specific APIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With this structure, each company now has the advantage of being able to hire developers that are familiar with vanilla Kotlin to develop a big part of their mobile apps. Whether they have a backend background, are interns or only &lt;a href=&#34;https://kotlinlang.org/education/why-teach-kotlin.html&#34;&gt;computer science graduates&lt;/a&gt;, KMM removes the requirement of years of experience in one of the mobile platforms, further increasing the pool of possible candidates. As a consequence, the demand for both Android and iOS developers would become considerably lower.&lt;/p&gt;
&lt;p&gt;Both Android and iOS developers would then work closely with Kotlin Mobile Developers in negotiating high-level APIs (interfaces and protocols) and domain objects that both UIs would access. This preliminary work would give the chance to mock these APIs on the frontend while the “mobile backend” is in development.&lt;/p&gt;
&lt;p&gt;In parallel, this shift could also create a wave of fully implemented mobile &lt;code&gt;.jar&lt;/code&gt; s and &lt;code&gt;Framework&lt;/code&gt;s available for any 3rd parties to use. This shift would enable smaller companies without access to Android and iOS developers, to get one step closer to publishing their mobile apps, by outsourcing the UI layer to an external agency.&lt;/p&gt;
&lt;h2 id=&#34;final-thoughts&#34;&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;A KMM solution brings back the parity issue between apps, which is one of the strongest arguments in favour of cross-platform UI tools. If this is an absolute requirement on your part, then it seems it is (or will be) possible to import KMM code into any frontend applications, including projects in React Native and Flutter.&lt;/p&gt;
&lt;p&gt;So if in the lifetime of your project, you decide to move to a cross-platform UI solution, this migration will not require changing the infrastructure. In that case, that transition could be faster, safer and more focused given that the mobile “backend” is already complete.&lt;/p&gt;
&lt;p&gt;KMM is not yet final, and there is a significant risk in adopting if your app is crucial to your business. There are a few signs from different companies moving to a KMM approach (&lt;a href=&#34;https://medium.com/@NetflixTechBlog/netflix-android-and-ios-studio-apps-kotlin-multiplatform-d6d4d8d25d23&#34;&gt;Netflix included&lt;/a&gt;) which give me hope that a part of this vision becomes true.&lt;/p&gt;
&lt;p&gt;For the past months, I have been trying to figure out what will the mobile world look like in the near future. I have become depressed with the developer communities obsession with new architectures, companies betting evermore on cross-platform UI tools and an impenetrable app market.&lt;/p&gt;
&lt;p&gt;But Kotlin Multiplatform brings me hope. A hope that there will be a higher focus on what matters.&lt;/p&gt;
&lt;p&gt;The user experience.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>O (velho) normal</title>
      <link>https://fmendes6.com/posts/20-10-05-retro/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/20-10-05-retro/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Futuro até quando?</title>
      <link>https://fmendes6.com/posts/20-08-03-android/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/20-08-03-android/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Verificação com transparência</title>
      <link>https://fmendes6.com/posts/20-07-06-factos/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/20-07-06-factos/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Oferta maior que a procura</title>
      <link>https://fmendes6.com/posts/20-06-01-esquemas/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/20-06-01-esquemas/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Adaptação vs Inovação</title>
      <link>https://fmendes6.com/posts/20-05-04-apps/</link>
      <pubDate>Mon, 04 May 2020 00:00:00 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/20-05-04-apps/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Documentation: Chapter</title>
      <link>https://fmendes6.com/posts/20-04-20_documentation_chapter/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/20-04-20_documentation_chapter/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part 3 of 3 about feature documentation on feature-based teams.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://fmendes6.com/posts/20-04-06_documentation_problem&#34;&gt;Part 1 - The problem&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://fmendes6.com/posts/20-04-13_documentation_squad&#34;&gt;Part 2 - Squad level documentation&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Part 3 - Chapter level documentation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;All platforms are different and deal with different limitations/constraints so it is considerably harder to create a template that would work for all platforms. However, one question that we should always have in mind is:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;”What would a colleague of mine need to know if he/she started to work alongside me in a shared codebase?”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This helps us envision the use case in which a document would be useful:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As an iOS developer, when I join a new squad, I want to have a high-level idea of how my iOS colleagues have implemented the feature and how all the components interact with each other.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For this scenario, I have come up with a template (&lt;a href=&#34;https://gist.github.com/fmendes6/96f2ebfb190b4aa522f660059f3d918d&#34;&gt;see here&lt;/a&gt;) that would work well for most features, independently of the feature that we implement:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;An overview of the architecture and services used;&lt;/li&gt;
&lt;li&gt;How it interacts with other parts of the app;&lt;/li&gt;
&lt;li&gt;A description of critical operations;&lt;/li&gt;
&lt;li&gt;Testing considerations;&lt;/li&gt;
&lt;li&gt;FAQ with common questions;&lt;/li&gt;
&lt;li&gt;References to documents and pages specific to the platform.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finally, I would advise you to avoid any code snippets (use pseudo-code instead) and as fewer implementation details as possible, as these should live closer to the code in the pull requests description.&lt;/p&gt;
&lt;p&gt;Once you finish writing the document, I would recommend you to request a review from your peers and improve it until they answer affirmatively to the following question:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;”If I just started working on this feature and I looked at this document, is the content here enough for me to start without having to reach out to the original developers?”&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Documentation: Squad</title>
      <link>https://fmendes6.com/posts/20-04-13_documentation_squad/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/20-04-13_documentation_squad/</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;em&gt;This is part 2 of 3 about feature documentation on feature-based teams.&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://fmendes6.com/posts/20-04-06_documentation_problem&#34;&gt;Part 1 - The problem&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Part 2 - Squad level documentation&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://fmendes6.com/posts/20-04-20_documentation_chapter&#34;&gt;Part 3 - Chapter level documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As mentioned before, one of the main problems between different squads is the creation of silos, which typically results in people knowing very little about the other features that exist in the product.&lt;/p&gt;
&lt;p&gt;To help solve this problem, I believe squads should have a central point of information, as well as a way for them to expose and communicate what their feature is about to other teams.&lt;/p&gt;
&lt;p&gt;This means a document that is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Short and to the point;&lt;/li&gt;
&lt;li&gt;Understandable by everyone on the squad (engineers, designers, testers and project managers)&lt;/li&gt;
&lt;li&gt;High-level with no platform-specific implementation details. For example, as an android developer, I don’t want to read iOS-specific tracking considerations in this document.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With these considerations in mind, some of the use cases I envision for this document would be the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As an Android developer, I want to know what my Android colleagues are working on and how to use the feature.
As a team lead, I want to know what is the roadmap of the teams I am leading (or others) during a meeting, as well as, how the data is flowing between platforms.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For these scenarios and considerations, I have come up with the following document structure and a template (&lt;a href=&#34;https://gist.github.com/fmendes6/51961e330f1766e5f4020de4e27a5d3e&#34;&gt;see here&lt;/a&gt;) that I use:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Usage&lt;/strong&gt; - Step by step on how to use the feature.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use cases&lt;/strong&gt; - The main use cases of the feature and what actions can the user perform.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Roadmap&lt;/strong&gt; - Which release version was the feature first included in.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Team&lt;/strong&gt; - Who worked on the feature.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Architecture overview&lt;/strong&gt; - A brief overview of the data flow, how it is architected at a very high level.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Strategies&lt;/strong&gt; - With a tracking, localisation and content subsections.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resources&lt;/strong&gt; - With links to other documents and platforms.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Keep in mind that this template is merely a guideline, so make sure you adapt it to your context.&lt;/p&gt;
&lt;p&gt;Finally, I would advise you to avoid including any temporary solutions or information regarding the current state while the feature is still in development, as that would increase the probability of the document becoming outdated.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A documentation problem</title>
      <link>https://fmendes6.com/posts/20-04-06_documentation_problem/</link>
      <pubDate>Mon, 06 Apr 2020 00:00:00 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/20-04-06_documentation_problem/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part 1 of 3 about feature documentation on feature-based teams.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Part 1 - The problem&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://fmendes6.com/posts/20-04-13_documentation_squad&#34;&gt;Part 2 - Squad level documentation&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://fmendes6.com/posts/20-04-20_documentation_chapter&#34;&gt;Part 3 - Chapter level documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In an attempt to improve its teams&amp;rsquo; autonomy, Spotify adopted an &lt;a href=&#34;https://www.youtube.com/watch?v=4GK1NDTWbkY&amp;amp;list=RD4GK1NDTWbkY&amp;amp;start_radio=1&amp;amp;t=4&#34;&gt;engineering culture&lt;/a&gt; that would allow small cross-functional teams to have end-to-end responsibility for the stuff they build, from design, commit, deploy, maintenance to operations.&lt;/p&gt;
&lt;p&gt;Instead of a model where teams are organised by the platform that they work on, the &amp;ldquo;Spotify model&amp;rdquo; proposes teams to be split by feature, with each team, now called a squad, having one or two representatives of each competency (Product, Android, etc.).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feature 1&lt;/th&gt;
&lt;th&gt;Feature 2&lt;/th&gt;
&lt;th&gt;Feature 3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Product&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Product&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Product&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Android&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Android&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Android&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Web&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Web&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Web&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Backend&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Backend&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Backend&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;QA&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;QA&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;QA&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This organisation enables cross-functional squads to focus on a particular domain problem that they call a mission, and nothing else. This focus naturally leads to faster delivery since all implementation decisions are now taken locally but comes with the cost of further increasing information silos between squads if communication isn&amp;rsquo;t promoted and consistent, which usually results in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;People knowing very little about other features. With different features under development in parallel, it becomes hard to keep track of what is done and how.&lt;/li&gt;
&lt;li&gt;Joining another squad is almost like joining a new company. You might share (or not) the same codebase, but the domain and the problem you are tackling can be completely different, which is excellent for people that want to work on something new from time to time but it is also costly for the company since it can take a considerable amount of time for someone to become productive.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Teams following this culture will take advantage of the physical proximity and faster (cross-platform) communication, which leads to quicker development but will lose out on cross-squad debate that leads to more sound and thoughtful decisions, consistent and long-lasting knowledge across the company.&lt;/p&gt;
&lt;p&gt;To tackle this problem, engineering teams promote code reviews from other squads in an attempt to reduce the creation of silos, but in reality, this generally results in reviews that do not consider the context and the overall high-level solution behind a code change, as engineers will mostly evaluate/review the technical aspects and not so much the global solution. To make matters worse, some squads will opt to review only squad-related work so that they can speed-up squad delivery but that further increases the existing silos of information between squads.&lt;/p&gt;
&lt;p&gt;These problems lead me to believe that companies need to seriously consider taking the time to communicate between squads because a company that favours communication before development and sharing information afterwards, will be able to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reuse some of the systems, platforms or tools that were developed by different squads instead of creating new ones, avoiding the cost of twice the developing time.&lt;/li&gt;
&lt;li&gt;Reuse systems that were developed in the past instead of relying on specific individuals. Those individuals might have created a great product at that time, but the engineers of today do not have the time to learn how to use it or are in place to reuse it.&lt;/li&gt;
&lt;li&gt;Share existing knowledge of the systems that are in place with any new hires, or even when moving people from a different squad. Without proper documentation and communication processes, a recent hire will not know about what is being developed in the other ten squads, why and how.&lt;/li&gt;
&lt;li&gt;Keep a record of the context and considerations at a particular time, so that squads can take quicker and more thoughtful decisions in the future.&lt;/li&gt;
&lt;li&gt;Have squads that provide more accurate estimates of pieces of work that were already developed by others.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Full autonomy is a problem when squads start developing tools that other squads already developed or when they decide to implement solutions that negatively impact other teams. It sounds great, but just like any organism, a product is not merely the sum of its parts. If our digestive system does not process food properly, there will be an impact on all the other organs.&lt;/p&gt;
&lt;p&gt;And here, those &amp;ldquo;boring&amp;rdquo; and &amp;ldquo;slow&amp;rdquo; processes that &amp;ldquo;are in the way&amp;rdquo; come into play and save a lot of the company&amp;rsquo;s time and money.&lt;/p&gt;
&lt;p&gt;However, discussing ideas and solutions sounds great, but different squads are usually at different stages of development so they might not have the time or the willingness to have meetings and calls to approve someone else&amp;rsquo;s work.&lt;/p&gt;
&lt;p&gt;So instead of having synchronous communication across squads/chapters, each squad should be responsible for communicating about what it is developing, how and why in one-way asynchronous communication. This opens up the possibility for outside feedback, which might come or not, but at least valuable information is saved for future reference.&lt;/p&gt;
&lt;p&gt;With this in mind, the next blogposts in this series will propose two new types of documentation, one product-oriented for sharing between squads and one competency-specific for sharing between the chapter.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Online courses with Coursera</title>
      <link>https://fmendes6.com/posts/20-02-06_coursera/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://fmendes6.com/posts/20-02-06_coursera/</guid>
      <description>&lt;p&gt;Even though online courses have been around for a while, they have never been so widespread and seen as a solution as now.&lt;/p&gt;
&lt;p&gt;We live in an era where anything that can accelerate the readiness of professionals without an IT background, like in bootcamps, will be seen as part of a solution for the lack of professionals in the workforce and online courses are a big part of it.&lt;/p&gt;
&lt;p&gt;Despite the hurdles of managing a company,  lay-offs, price adjustments and so on, the number of users keeps growing year over year with apparently &lt;em&gt;Coursera&lt;/em&gt; growing up to 40-45 million registered users by the end of 2019 and &lt;em&gt;Udacity&lt;/em&gt; to be expected to hit the 11.5 million mark by the same time.&lt;/p&gt;
&lt;h2 id=&#34;coursera&#34;&gt;Coursera&lt;/h2&gt;
&lt;p&gt;Launched in 2012, the &amp;ldquo;year of MOOCs&amp;rdquo; (massive online open course), Coursera rapidly became one of the biggest educational platforms online.&lt;/p&gt;
&lt;p&gt;The pricing seems similar in the vast majority of the courses, with monthly subscriptions of 37-60£ per course or an annual payment of 304£ to access over 2000 courses, specialisations and certificates.&lt;/p&gt;
&lt;p&gt;Paying for a subscription not only provides you with a set of learning materials and videos from the lecturers but also with quizzes, assignments and a mini project to consolidate the topic you just studied.&lt;/p&gt;
&lt;h2 id=&#34;project&#34;&gt;Project&lt;/h2&gt;
&lt;p&gt;For the past months, I have been doing the &lt;em&gt;User Experience Research and Design Specialisation&lt;/em&gt; which consists of 6 courses, with each one taking around one month to finish.&lt;/p&gt;
&lt;p&gt;Courses are then subdivided in a set of weeks, with weeks having 2 to 4 videos ranging from 5 to 20 minutes, as well as, quizzes, assignments and a mini-project at the end of the course.&lt;/p&gt;
&lt;p&gt;By the end of course one, I had to do a Heuristics evaluation of the Coursera forums and write up to 10 issues in the user experience that are not following good practices. Each finding should have the following structure:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Finding 1:&lt;/strong&gt; &lt;em&gt;Short description&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;Severity:&lt;/strong&gt; &lt;em&gt;-/4&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;Heuristic Observed:&lt;/strong&gt; &lt;em&gt;Heuristic #1&lt;/em&gt;, &lt;em&gt;Heuristic #4&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;Description:&lt;/strong&gt; &lt;em&gt;A brief description of the problem&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;Recommendation:&lt;/strong&gt; &lt;em&gt;Provide a solution to fix the problem&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For course two, the main goal was to understand the user&amp;rsquo;s needs in one particular feature of any app of our choice. After conducting interviews designed by ourselves with at least two people, we would then create an &amp;ldquo;affinity wall&amp;rdquo; which is a set of columns organised by topic, each containing a few post-its with quotes and observations from the participants.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Lack of personalisation&lt;/th&gt;
&lt;th&gt;Lack of reminders&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;[User1] &lt;em&gt;Observation #1&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;[User2] &lt;em&gt;Observation #2&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[User1] &lt;em&gt;Quote&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;[User1] &lt;em&gt;Quote&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[User2] &lt;em&gt;Quote&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;From all these topics, we would then extract the main issues of the app.&lt;/p&gt;
&lt;h2 id=&#34;thoughts&#34;&gt;Thoughts&lt;/h2&gt;
&lt;p&gt;I realise now that this is the third time I write about education, after reviewing the &lt;em&gt;Design for Mobile Developers&lt;/em&gt; course on Udacity and then by doing a retrospective on my Master&amp;rsquo;s degree four years later.&lt;/p&gt;
&lt;p&gt;Online courses, in particular, are an interesting topic because even though software companies might hire someone with one and without a degree, the same doesn&amp;rsquo;t happen in the public sector.&lt;/p&gt;
&lt;p&gt;Meaning that you might get a job in a private company but you will be unable to secure a job in schools or public companies. And it&amp;rsquo;s not hard to understand why.&lt;/p&gt;
&lt;p&gt;In online courses, videos last no longer than an hour combined per week, which is nowhere near the minimum of what formal institutions require you to attend. Most platforms&amp;rsquo; courses, &lt;em&gt;Coursera&lt;/em&gt; being one, are peer-reviewed which means that the grades you get are not assigned by a credited professor but by another amateur/non-graded students.&lt;/p&gt;
&lt;p&gt;This doesn&amp;rsquo;t mean that online courses can&amp;rsquo;t be almost as important. To stay relevant in the software industry, IT professionals must keep learning and diversify their skills throughout the years.&lt;/p&gt;
&lt;p&gt;If you plan to be as vertical and as specialised as possible in a career path, researching and focusing on that one field is crucial. But if you want to have a broader view on how a product gets developed, shipped and managed, an horizontal knowledge across all the disciplines involved is more valuable.&lt;/p&gt;
&lt;p&gt;In my group of friends, the question to whether pay for a certificate or not, has always been at the core of our discussions. However, today I am sure that if the goal is to learn properly about a subject, practising it is mandatory, either by the form of quizzes or assignments, and that comes only with a subscription.&lt;/p&gt;
&lt;p&gt;The main problem now is which platform to choose, but what if they were equally valuable in different scenarios? Maybe even at different points in your professional life?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Udacity&lt;/em&gt; seems to be a great platform if what you are looking for is learning about a topic in a &amp;ldquo;close&amp;rdquo; relationship with a specific private company.&lt;/p&gt;
&lt;p&gt;Since most of their courses are prepared in collaboration with big names of the industry, and sometimes even lectured by their professionals, the price naturally reflects this with courses going for several hundreds of dollars per month.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Udemy&lt;/em&gt;, on the other hand, is more like a battle-royal of courses where anyone can create their own and sell its content. Consequently, there is a lot of dubious and sketchy courses, but among them, you might be able to find a few gems.&lt;/p&gt;
&lt;p&gt;If what you are looking for is to get to know as much as possible about a particular topic, or even personal perspectives and uses of technology, &lt;em&gt;Udemy&lt;/em&gt; might have courses that contain unique content that does not exist anywhere else.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Coursera&lt;/em&gt; seems to have more of a classical approach to education, by providing content designed and developed by universities, which tends to focus more on the conceptual side and not so much on specific tools or technologies.&lt;/p&gt;
&lt;p&gt;Currently for me, &lt;em&gt;Coursera&lt;/em&gt; makes the most sense because I want to learn about UX research and the thought/planning process behind it, which means the concepts and techniques used by designers and not the technologies they use.&lt;/p&gt;
&lt;p&gt;For example, I was happy to see that by the end of the first course of the UX specialisation, there was a video with two interviews to professionals where they described the design process behind their products, which was something that I felt missing in the Udacity&amp;rsquo;s course:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;…I was hoping that at the end of all the lessons, there would be an extra video explaining how a real-world app like Google Keep or Google Music was designed.&amp;rdquo; - &lt;a href=&#34;https://fmendes6.com/posts/14-08-03_udacity/&#34;&gt;Udacity&amp;rsquo;s UX for Mobile Developers&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you intend to secure a job in the industry, an online course might not be enough, but it certainly gives you a substantial resume boost. Moreover, if that course is about a field of expertise that is adjacent to yours like design is to development, you will have the skills to communicate effectively between teams and understand how they work, which would make you a professional that most software companies lack.&lt;/p&gt;
&lt;p&gt;If you are fortunate to be in a company that provides an educational budget for your professional development, there is no excuse for not taking advantage of it. As a former teacher of mine used to say &amp;ldquo;&lt;em&gt;Education is the only investment in life with a guaranteed 100% return.&lt;/em&gt;.&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;qa&#34;&gt;QA&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Isabel Costa&lt;/strong&gt; (&lt;a href=&#34;https://www.twitter.com/@isabelcmdcosta&#34;&gt;&lt;em&gt;@isabelcmdcosta&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;strong&gt;Software Developer&lt;/strong&gt; at &lt;strong&gt;GeoPhy&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. How do you think companies see online courses and other non-college institutions, like bootcamps?&lt;/strong&gt;&lt;br&gt;
I think companies might see this in different ways. It depends on the recruitment process and people in charge of it. From my perspective, as a college degree graduate, I think some companies may see it like the candidate is interested in learning and evolving as an engineer, and end up valuing this continuous learning attitude.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Which courses did you finish and what benefits did you take from them?&lt;/strong&gt;&lt;br&gt;
I did 2 courses on Coursera back in 2015, one on Computer Networks and the other on Web Application Architectures. I think as a student at the time, this could show potential employers I was interested and eager to learning about technology besides what I was taught in school.&lt;/p&gt;
&lt;p&gt;I also, got to learn some more development focused and less theoretical focused concepts important for web development, that I actually was not taught in college. Today, I’m using Udemy as a way of learning core knowledge I need for work.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. What do you think about all the different options available?&lt;/strong&gt;&lt;br&gt;
Regarding online courses, I can’t think about any format being missing. I think that are a lot of options out there, from video courses, to interactive web applications that teach you software engineering concepts and technologies.&lt;/p&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.investopedia.com/articles/investing/042815/how-coursera-works-makes-money.asp&#34;&gt;How Coursera Makes Money&lt;/a&gt; by Investopedia&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.owler.com/company/udacity&#34;&gt;Udacity Competitors, Revenue and Employees&lt;/a&gt; by Owler&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.classcentral.com/report/udacity-2019-year-review/&#34;&gt;Udacity’s 2019: Year in Review&lt;/a&gt; by Class Central&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.classcentral.com/report/coursera-2019-year-review/&#34;&gt;Coursera’s 2019: Year in Review&lt;/a&gt; by Class Central&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.coursera.org/specializations/michiganux&#34;&gt;User Experience Research and Design&lt;/a&gt; by Coursera&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.quora.com/How-valid-are-Coursera-or-other-online-certificates-as-compared-to-proper-degree&#34;&gt;How valid are Coursera or other online certificates as compared to proper degree?&lt;/a&gt; by on Quora&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nngroup.com/articles/ten-usability-heuristics/&#34;&gt;Heuristics evaluation&lt;/a&gt; by Nngroup&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nngroup.com/articles/affinity-diagram/&#34;&gt;Affinity diagram&lt;/a&gt; by Nngroup&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Static sites with Hugo</title>
      <link>https://fmendes6.com/posts/20-01-23_hugo/</link>
      <pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://fmendes6.com/posts/20-01-23_hugo/</guid>
      <description>&lt;p&gt;At a time when &lt;em&gt;Content Management Systems&lt;/em&gt; solutions, like &lt;em&gt;Wordpress&lt;/em&gt; or &lt;em&gt;Joomla&lt;/em&gt; had an associated cost and required a considerable amount of maintenance, static site generators such as Jekyll, together with free hosting services like &lt;em&gt;Github Pages&lt;/em&gt;, were created to help users set up, host and run their website in a matter of minutes.&lt;/p&gt;
&lt;p&gt;It was not unusual in hosted &lt;em&gt;Wordpress&lt;/em&gt; solutions to have to update their &lt;em&gt;Wordpress&lt;/em&gt; instance or 3rd party plugins from time to time, even for those who just wanted to have a blog or to build an online presence by showcasing their CV.&lt;/p&gt;
&lt;p&gt;Static site generators fixed these issues while also making it easier to backup, offering more flexibility and requiring fewer security concerns, which makes the user focus on the content and not so much on the infrastructure around it.&lt;/p&gt;
&lt;h2 id=&#34;hugo&#34;&gt;Hugo&lt;/h2&gt;
&lt;p&gt;Written in &lt;em&gt;Go&lt;/em&gt; in 2013, &lt;em&gt;Hugo&lt;/em&gt; is another static site generator but with a focus on speed and flexibility. With a lot of different themes to choose from, free or paid, &lt;em&gt;Hugo&lt;/em&gt; provides many different tools and defines guidelines on best practices for theme creators, so that end-users can switch between themes without having to introduce significant changes in the codebase.&lt;/p&gt;
&lt;p&gt;As an example, most themes support out of the box integrations with tracking platforms like &lt;em&gt;Google Analytics&lt;/em&gt; or 3rd party comment services like &lt;em&gt;Disqus&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;project&#34;&gt;Project&lt;/h2&gt;
&lt;p&gt;Recently I have worked with Hugo in two different projects, with this blog being the first one and an engineering documentation website at my workplace the second, both with different requirements.&lt;/p&gt;
&lt;h3 id=&#34;sharednode&#34;&gt;Sharednode&lt;/h3&gt;
&lt;p&gt;Moving &lt;em&gt;Sharednode&lt;/em&gt; to a static site required the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support for multi language;&lt;/li&gt;
&lt;li&gt;Support for several menus;&lt;/li&gt;
&lt;li&gt;Support for different authors;&lt;/li&gt;
&lt;li&gt;Support for content exporting;&lt;/li&gt;
&lt;li&gt;A responsive design;&lt;/li&gt;
&lt;li&gt;A minimalistic design.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Minimalistic and with two predominant colours, the &lt;em&gt;ezhil&lt;/em&gt; theme seemed to be the closest to the &lt;em&gt;Sharednode&lt;/em&gt; brand, even though it required a few tweaks.&lt;/p&gt;
&lt;p&gt;Even though Hugo provides support for themes to be multilingual, not all are ready for it, so it was necessary to add a menu button to the top-right corner of the theme with the language codes in which the content was also translated.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sharednode&lt;/em&gt; was initially created to be used by different authors, so it was essential to keep that feature. Even though the theme did not support this either, it was achieved by adding a new author field to the front matter&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; of each post and then referencing it in the post’s &lt;em&gt;HTML&lt;/em&gt; page.&lt;/p&gt;
&lt;p&gt;Posts can be written in &lt;em&gt;markdown&lt;/em&gt;, isolated from the theme implementation, which makes it straightforward to export them or reuse elsewhere when needed.&lt;/p&gt;
&lt;p&gt;With &lt;em&gt;ezhil&lt;/em&gt; having a responsive design, just as most of the themes available online, all the initial requirements were now met.&lt;/p&gt;
&lt;h3 id=&#34;engineering-documentation&#34;&gt;Engineering documentation&lt;/h3&gt;
&lt;p&gt;The engineering documentation has a different purpose compared to the previous project. In this case, the site had been built with the &lt;em&gt;whisper&lt;/em&gt; theme, and it needed to start supporting multiple menus so that it would be easier to add and discover content.&lt;/p&gt;
&lt;p&gt;It was important to move from a single menu with a sidebar (with further navigation) to four menus, each with their sidebar and their submenus.&lt;/p&gt;
&lt;p&gt;Hugo generates each menu by scanning through each folder inside the content folder, the root of all content, and then each sidebar by getting the title of each post inside that folder.&lt;/p&gt;
&lt;p&gt;To have a second layer of navigation in the sidebar, I added an extra field in each post’s front matter that is verified during the sidebar generation, and if present, a tab space is printed.&lt;/p&gt;
&lt;p&gt;For interface and visual tweaks, like updating colours and replacing assets, it was necessary to create a folder in the root of the project, with the same name as the asset’s folder in the theme, so that those values get overridden during the site generation.&lt;/p&gt;
&lt;p&gt;This was necessary because the project sets up its theme through a git submodule, so whenever the site gets deployed, local changes in the theme are not applied remotely.&lt;/p&gt;
&lt;h2 id=&#34;thoughts&#34;&gt;Thoughts&lt;/h2&gt;
&lt;p&gt;There is a trend of people that recently is migrating from &lt;em&gt;medium&lt;/em&gt; since content paywalls were introduced, which gives an edge to authors that opted-in and does not promote the ones that don’t.&lt;/p&gt;
&lt;p&gt;Even though &lt;em&gt;Sharednode&lt;/em&gt; doesn’t have an audience big enough for it to be a concern, moving from medium to a static site occurred mostly because of the multi-language support as well as the flexibility to visually and functionally customise.&lt;/p&gt;
&lt;p&gt;At this point, I already had tried to set up a site in Jekyll a few years before, but because I failed at doing so, I decided to go with Hugo this time. Plus, I had seen Steve Francia doing a presentation with Hugo and saw how fast it was to set up and run and deploy.&lt;/p&gt;
&lt;p&gt;Setting up the base for &lt;em&gt;Sharednode&lt;/em&gt; wasn’t as simple as I thought, but after watching the video tutorials, it became pretty straightforward. Customising it, however, took slightly longer.&lt;/p&gt;
&lt;p&gt;While setting the navigation is done mostly through Hugo configurations and general assumptions, customising the UI and adding extra functionality like multi-language is highly dependent on the theme that one uses.&lt;/p&gt;
&lt;p&gt;After both experiences, I am still not sure what to think about the organisation of the official documentation since it can be quite good at times but also a bit confusing when you are just starting to work with static sites since the documentation is organised at a technical level and not so much on functionality. This organisation means that users go online and ask about how can they implement the feature that they need.&lt;/p&gt;
&lt;p&gt;I have noticed that Hugo does not seem to support any content searching out of the box, so in a blog-style site, this could potentially be limiting for visitors. Similarly, in the creator’s side, I decided to prefix the date of publishing to each post’s filename so that content filtering in the future becomes possible.&lt;/p&gt;
&lt;p&gt;Statically generated sites are certainly not the solution for every content creator but with the use of standard text formats like markdown and it’s inheriting exporting nature, together with theming flexibility and feature extensibility, makes them an option worth considering.&lt;/p&gt;
&lt;h3 id=&#34;qa&#34;&gt;QA&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;João Junceira&lt;/strong&gt; (&lt;a href=&#34;https://www.twitter.com/@joaojunceira&#34;&gt;&lt;em&gt;@jmjunceira&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;strong&gt;Software Developer&lt;/strong&gt; at &lt;strong&gt;Teckro&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. How do you see the role of generated static websites in today’s industry?&lt;/strong&gt;&lt;br&gt;
Static websites are around for a long time since the Web started. I think they are getting
popular thanks to Git-based hosting. They are useful to write documentation, web pages
to promote a product, blogs or even some corporate page.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Have you used any in the past?&lt;/strong&gt;&lt;br&gt;
I have a Hugo page with my CV and personal project. Once created a blog to test the
features. It&amp;rsquo;s quite easy to use and seems to be really fast to publish.&lt;/p&gt;
&lt;p&gt;However, Hugo might not be the most friendly tool for front-end developers because it&amp;rsquo;s
written in Golang. Since this are power-users that like to customise their tools.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. In which other scenarios would you use Hugo?&lt;/strong&gt;&lt;br&gt;
Have a corporate static page or page to promote a product. Any other technical purpose
such as documentation. Basically anything that doesn&amp;rsquo;t need to query a backend.&lt;/p&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo official website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mkdocs.org&#34;&gt;MkDocs official website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vividvilla/ezhil&#34;&gt;Ezhil theme for Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://themes.gohugo.io/hugo-whisper-theme/&#34;&gt;Whisper theme for Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://programminghistorian.org/en/lessons/building-static-sites-with-jekyll-github-pages&#34;&gt;Building a static website with Jekyll and GitHub Pages&lt;/a&gt; by Programming Historian&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/content-management/front-matter/&#34;&gt;Front Matter&lt;/a&gt; by Hugo&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&amp;ldquo;Front matter allows you to keep metadata attached to a post, i.e, it define the title, data, weight, etc. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Machine Learning with Firebase</title>
      <link>https://fmendes6.com/posts/20-01-09_mlkit/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://fmendes6.com/posts/20-01-09_mlkit/</guid>
      <description>&lt;p&gt;It’s undeniable the spotlight that machine learning has been having in the past years, with major companies like Google taking advantage of it, or even claiming, that it is at the center of their products.&lt;/p&gt;
&lt;p&gt;The amount of quality data gathered, as well as the domains it covers, will determine which companies of today will dominate the world in the next decade. This requires them to ship products with ML but also to provide tools for 3rd-party developers to adopt.&lt;/p&gt;
&lt;p&gt;Even though regulations forbid them to use personally identifiable data gathered by developers, companies will benefit from massive amounts of anonymous statistics that only a world-wide usage can provide, which will be used to improve their learning algorithms and products in the long run.&lt;/p&gt;
&lt;h2 id=&#34;mlkit&#34;&gt;MLKit&lt;/h2&gt;
&lt;p&gt;Announced at Google IO 2018 and as part of Firebase, MLKit is one of those tools that aims to democratize the access to ML by letting developers process data on the device or the cloud through the use of a simple set of APIs. These include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/ml-kit/recognize-text&#34;&gt;Text recognition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/ml-kit/detect-faces&#34;&gt;Face Detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/ml-kit/label-images&#34;&gt;Image labeling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/ml-kit/read-barcodes&#34;&gt;Barcode scanner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/ml-kit/identify-languages&#34;&gt;Natural language processing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is possible to add a custom image interpreter or shape detector for more fine-grained control but this comes with a considerable cost, as it will require a lot more work to implement and less support and documentation to resort too.&lt;/p&gt;
&lt;h2 id=&#34;project&#34;&gt;Project&lt;/h2&gt;
&lt;p&gt;Creating a custom model on firebase and using MLKit on the mobile apps for detection, appeared to be a good alternative for those who want a specific solution but without a big implementation cost.&lt;/p&gt;
&lt;p&gt;In a team of three as part of a Hackaton, a prototype was created that would take a picture of a skin mole and use MLKit to process and detect signs of skin diseases. This was achieved by first downloading a public dataset of pictures containing skin moles, labeled with their corresponding diseases and then uploading them to firebase which creates and trains a model and then generates a &lt;code&gt;.tflite&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://fmendes6.com/images/20-01-09_mlkit.png&#34; alt=&#34;ML Kit project&#34;&gt;&lt;/p&gt;
&lt;p&gt;Next, the mobile application selects an image, either by choosing from the gallery or by taking a picture and then processes it with MLKit against the provided model resulting in a set of confidence levels for each provided label, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Melanoma - 95%&lt;/li&gt;
&lt;li&gt;Benign Keratosis - 10%&lt;/li&gt;
&lt;li&gt;Dermatofibroma - 5%&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;thoughts&#34;&gt;Thoughts&lt;/h2&gt;
&lt;p&gt;Developing a custom model for a specific problem (analysing skin moles) proved to be an interesting challenge because the domain was outside of the 400 provided categories by MLKit’s image labeling capabilities.&lt;/p&gt;
&lt;p&gt;Creating a model on firebase required us to make a trade-off between latency and file size of the model versus its accuracy, with the general plan taking an hour and a half to train around 6322 pictures and generating a 3.2mb &lt;code&gt;.tflite&lt;/code&gt; model file. As a reference and according to the estimations, training a model with the &lt;em&gt;Higher Accuracy&lt;/em&gt; plan would take around 6 hours.&lt;/p&gt;
&lt;p&gt;Even though the creation, integration, and use of a custom model in an android app took no longer than half a day on a first try, if we wanted to have a custom shape detector for the app to focus solely on the moles and ignore the rest of the picture, it would be a much bigger challenge due to the very limited existing documentation.&lt;/p&gt;
&lt;p&gt;One colleague of mine managed to get it working by following a (long) &lt;a href=&#34;https://medium.com/tensorflow/training-and-serving-a-realtime-mobile-object-detector-in-30-minutes-with-cloud-tpus-b78971cf1193&#34;&gt;tutorial&lt;/a&gt; that promised to &lt;em&gt;&amp;ldquo;create a mobile object detector in 30 minutes&amp;rdquo;&lt;/em&gt; but which took almost 3 days to complete due to incorrect shell commands, TPUs not running as expected and much more.&lt;/p&gt;
&lt;p&gt;Having explored only the image labeling capabilities of MLKit, the library seems powerful and relatively easy to use for general purposes or proofs-of-concept but be prepared if you need to develop a very custom or data critical application.&lt;/p&gt;
&lt;p&gt;Finally, if you plan on using cloud TPUs (tensor processing units) on a trial plan, make sure you turn them off after the use to avoid unnecessary and costly surprises.&lt;/p&gt;
&lt;h3 id=&#34;qa&#34;&gt;QA&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Attila Blénesi&lt;/strong&gt; (&lt;a href=&#34;www.twitter.com/@ablenessy&#34;&gt;@ablenessy&lt;/a&gt;)&lt;br&gt;
&lt;strong&gt;Android Developer&lt;/strong&gt; at &lt;em&gt;Babylon Health&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. How do you see the emergence of AI in the software industry?&lt;/strong&gt;&lt;br&gt;
AI has been a topic for decades, the accesability of compute and data in the past decades enable the topic to boom. Currently the democratisation of AI tools and resources will dominate the next decade, in my opinion.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Tell us about any experience you had with machine learning.&lt;/strong&gt;&lt;br&gt;
I have been working with on-device machine learning on Android for the past few years, focusing on the integration of off the shelf (Vision &amp;amp; object detection) and custom (GAN - Pix to pix) models. Had gone through struggles and sweat in the first stages when TensorFlow Lite was announced, but now the developer experience is much more streamlined. Just in the past year, advances that enable more and more devs to implement features with ease.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Would you consider MLKit as a core library of a project?&lt;/strong&gt;&lt;br&gt;
Definitely yes, If there is a user need that their offerings vision and language custom AI can solve, it cuts down the development process significantly. Enables developers to focus on crafting the user experience, handing over the model deployment, and inference execution to MLKit that provides you with easy to use API&amp;rsquo;s, using state of the art solutions, best practices in the background.&lt;/p&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/ml-kit&#34;&gt;ML Kit&lt;/a&gt; by Firebase&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/firebase/mlkit-material-android&#34;&gt;ML Kit Showcase with Material Design&lt;/a&gt; by Firebase&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/tensorflow/training-and-serving-a-realtime-mobile-object-detector-in-30-minutes-with-cloud-tpus-b78971cf1193&#34;&gt;&lt;em&gt;&amp;ldquo;Create a mobile shape detector in 30 minutes&amp;rdquo;&lt;/em&gt;&lt;/a&gt; by TensorFlow&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>MonzoPrep</title>
      <link>https://fmendes6.com/posts/19-09-03_monzoprep/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/19-09-03_monzoprep/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The legend of documentation: A markdown to the past</title>
      <link>https://fmendes6.com/posts/19-06-03-legend_documentation/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/19-06-03-legend_documentation/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Documentation: Postmortem</title>
      <link>https://fmendes6.com/posts/19-01-10_postmortem/</link>
      <pubDate>Thu, 10 Jan 2019 10:30:11 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/19-01-10_postmortem/</guid>
      <description>&lt;p&gt;I’m fortunate enough to still keep in touch with friends from my bachelor’s degree every couple of days. We discuss software engineering the most, by sharing technical blog posts and news articles but also associated fields like politics, investments and company’s culture.&lt;/p&gt;
&lt;p&gt;Last year on one autumn’s evening, one of my friends grabbed my attention by mentioning that he was writing a postmortem on his train back home because something had happened at work.&lt;/p&gt;
&lt;p&gt;That moment I remembered I had seen public postmortems in the past like the &lt;a href=&#34;https://community.monzo.com/t/resolved-current-account-payments-may-fail-major-outage-27-10-2017/26296/95&#34;&gt;monzo’s account payments outage&lt;/a&gt; and Revolut’s &lt;a href=&#34;https://blog.revolut.com/autopsy-why-card-top-ups-and-payments-were-failing/&#34;&gt;top-ups failing&lt;/a&gt; but it never crossed my mind that they could also be very useful privately to a team.&lt;/p&gt;
&lt;p&gt;That a postmortem as a written document doesn’t necessarily need to be written only when there is a software incident with a high degree of criticality, i.e, when companies need to reassure users, clients or stakeholders.&lt;/p&gt;
&lt;p&gt;That’s how I realised it would have been useful to have had postmortems in my previous workplaces. How many times I had colleagues, and also myself, saying things like: “Yes, we once had Y happening” and how those experiences stay only with those who lived it, until they are soon forgotten.&lt;/p&gt;
&lt;p&gt;So I set myself up to look for different kinds of templates in order to create my own. Something more specific to my use case that could be version controlled, just like we do with &lt;a href=&#34;https://fmendes6.com/posts/18-11-24_rfc/&#34;&gt;RFCs&lt;/a&gt; at Candyspace.&lt;/p&gt;
&lt;p&gt;When creating my own &lt;a href=&#34;https://gist.github.com/fmendes6/a64c7f9452b6ae19ed900a87b97268b0&#34;&gt;template&lt;/a&gt;, I realised that one of the things that usually grabs the attention of most engineers is when somebody explains an incident that occurred, the root causes and consequences, how they faced it and how they fixed it. Which are the goals of a postmortem.&lt;/p&gt;
&lt;p&gt;Moreover, postmortems are valuable because they clarify and detail what happened to all the parties involved, and depending on the content and the level of detail, they can possibly be shared with the management team or even the client, with the added benefit that your future colleagues can also learn from your team’s past mistakes.&lt;/p&gt;
&lt;p&gt;Unfortunately, it wasn’t long enough until I had to use the template myself. And only then, by submitting it as a pull request, I realised that it also gave an opportunity to everyone involved to provide their own input and understanding of the problem.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PS: When I was writing this article, I was pleased to find &lt;a href=&#34;https://medium.com/production-ready/writing-your-first-postmortem-8053c678b90f&#34;&gt;another one&lt;/a&gt; from &lt;a href=&#34;https://medium.com/u/3caee51c98eb?source=post_page-----5194e758dd0c----------------------&#34;&gt;Mathias Lafeldt&lt;/a&gt; that has a very similar template. If you are interested in introducing postmortems in your workflow, it is definitely worth a read.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Documentation: Request for Comments</title>
      <link>https://fmendes6.com/posts/18-11-24_rfc/</link>
      <pubDate>Sat, 24 Nov 2018 10:30:11 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/18-11-24_rfc/</guid>
      <description>&lt;p&gt;A few weeks ago I talked internally at Candyspace about how documentation is playing a big part in the Android team and how we evolved after introducing different kinds of documentation into our development process.&lt;/p&gt;
&lt;p&gt;When introducing a new feature into the app, we usually create a separate git branch for the feature and proceed with its implementation. When the implementation is complete, a new pull request is opened against the main branch and a review is requested from at least on colleague before it gets merged.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://fmendes6.com/images/18-11-24_rfc_image1.png&#34; alt=&#34;Initial development timeline&#34;&gt;
&lt;em&gt;Figure 1: Initial development timeline&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;However, in some features (or bug fixes) there were times when the reviewer would suggest a “better” solution or simply didn’t like the approach, to the problem that we were trying to solve, which resulted in frustration and a bittersweet feeling from the developer that was implementing it due to the time wasted.&lt;/p&gt;
&lt;p&gt;In this blog post I would like to share how we incorporated RFC’s (Request for Comments) documents to better architect what we are about to implement. Even though RFCs have a lot of benefits, the main reasons why we write them are the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All team members can comment on a new change/feature before it gets implemented;&lt;/li&gt;
&lt;li&gt;It serves as an historical report (even across teams) of the decisions taken at the time and the context in which they were taken and not lost in emails or chats;&lt;/li&gt;
&lt;li&gt;In the long run, it removes the dependency to another colleague’s knowledge of the product you are working on.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When looking for examples, we found Rust’s rfc’s repository that describes an exceptional model that is being used to develop the language. If you read through the whole process, you may come to realise that it seems too long and strict but it’s important to understand that Rust is an open source language, with thousands of contributors and not the average team.&lt;/p&gt;
&lt;p&gt;Since our team is much smaller and we work on a mobile app, we adapted the template and modified our development current process with what we consider valuable for us.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://fmendes6.com/images/18-11-24_rfc_image2.png&#34; alt=&#34;Development timeline&#34;&gt;
&lt;em&gt;Figure 2: Development timeline&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So our current process includes the writing of an RFC document and a discussion of the solution in a dedicated pull request, before the implementation takes place.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://fmendes6.com/images/18-11-24_rfc_image3.png&#34; alt=&#34;Branching timeline&#34;&gt;
&lt;em&gt;Figure 3: Branching timeline&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This means that besides the usual feature branch, we now create an extra branch for the RFC where we will write the document that will get merged to the main branch as soon as its implementation is ready.&lt;/p&gt;
&lt;p&gt;But a successful discussion can only happen if all team members follow a simple set of rules in order to keep the discussion updated and organised. After analysing what went wrong in the past and how could we prevent it in the future, this is what we agreed works best for us:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a dedicated branch for the RFC;&lt;/li&gt;
&lt;li&gt;Create a markdown file with all the required information by following the &lt;a href=&#34;https://gist.github.com/fmendes6/709425fc251d418edf4281fcb8b60f44&#34;&gt;template&lt;/a&gt;, inside a folder that will only contain RFCs;&lt;/li&gt;
&lt;li&gt;Create a PR (pull request) against the main branch with the RFC document. Assign a review tag in that PR;&lt;/li&gt;
&lt;li&gt;A discussion will take place in the RFC’s PR until at least 2 colleagues approve it, by assigning their user tags in the PR (ex: Jakob, Tiago);&lt;/li&gt;
&lt;li&gt;After the approval, the process ends its design phase and the feature enters in the implementation phase;&lt;/li&gt;
&lt;li&gt;The RFC’s PR should stay open, with the in development tag assigned, until the feature’s implementation is merged into the main branch;&lt;/li&gt;
&lt;li&gt;If questions/suggestion arises during implementation, the question tag should be assigned to the RFC’s PR, which can trigger an update to the RFC. If the question/suggestion is addressed, the question tag should be removed;&lt;/li&gt;
&lt;li&gt;If a new solution arises during implementation by any team member, only the main developer can decide if he will push it back to design phase or continue with the implementation;&lt;/li&gt;
&lt;li&gt;When implementation finishes, the feature can be code reviewed and then merged into the main branch, together with the RFC’s PR. Make sure the RFC’s PR only contains the tags with the names of the colleagues that approved the RFC.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://fmendes6.com/images/18-11-24_rfc_image4.png&#34; alt=&#34;An example of an RFC’s Pull Request timeline&#34;&gt;
&lt;em&gt;Figure 4: An example of an RFC’s Pull Request timeline&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Feel free to use it and adapt it to your own context. If in the long run, you felt it helped you and your team, please reach out to me and let me know about your experience!&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rust-lang/rfcs/blob/master/text/0090-lexical-syntax-simplification.md&#34;&gt;Example of a Rust RFC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://buriti.ca/6-lessons-i-learned-while-implementing-technical-rfcs-as-a-management-tool-34687dbf46cb&#34;&gt;6 lessons I learned while implementing RFCs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Android instant apps</title>
      <link>https://fmendes6.com/posts/18-01-10-instant_apps/</link>
      <pubDate>Wed, 10 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://fmendes6.com/posts/18-01-10-instant_apps/</guid>
      <description></description>
    </item>
    
    <item>
      <title>My take on a computer science MSc degree</title>
      <link>https://fmendes6.com/posts/18-01-05_cs_masters/</link>
      <pubDate>Fri, 05 Jan 2018 10:30:11 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/18-01-05_cs_masters/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;“I don’t like to buy expensive stuff but I love options. I like to know I can buy a Maybach but I just decide I don’t want one. I like to know I can buy a Bentley if I want, I just don’t want one.” — Eric Thomas&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2004 and I, as most of my colleagues, had finished my bachelor degree. As our home faculty focuses more on a practical side of studying, by structuring the programme in a way that in 3 years, any student would be ready to hit the market, we all joined companies as soon as we finished the degree.&lt;/p&gt;
&lt;p&gt;One year into my professional career and I started realising that having a masters degree was quickly becoming the norm. More and more colleagues, had a higher degree than I did, and even though they didn’t have an advantage over me until then, as my previous jobs and projects didn’t require one, I couldn’t predict if they would have in the years to come.&lt;/p&gt;
&lt;p&gt;Moreover, a few decades ago whoever had a college degree, was already seen as someone with a higher status, smarter and with an expected better future when compared to most people. That used to happen exactly because of the scarcity of people with a college degree. Now if you think a bit further, I would ask you to imagine having a new colleague in your current job, with a PhD. Chances are, you would be impressed. And I would be as well.&lt;/p&gt;
&lt;p&gt;This happens, not only due to the lack of IT professionals with a PhD in our field but also because it is a sign of hard work, long-term commitment of getting an extra 4-year degree and for pushing the boundaries of human knowledge, even though you don’t know if his PhD will have any significant impact on the project you two are working on.&lt;/p&gt;
&lt;p&gt;Plus, I was 25 years old and my willingness to study in a minimum of 2 year commitment programme was lessening by the year, especially in a field where things change dramatically in a short period of time.&lt;/p&gt;
&lt;p&gt;So I either started then, or I wouldn’t start at all. Having remembered what once a professor told to a colleague of mine, that “education is the only investment with 100% return guaranteed” I decided to apply and started it.&lt;/p&gt;
&lt;h2 id=&#34;two-years-later&#34;&gt;Two years later&lt;/h2&gt;
&lt;p&gt;Fast forward until the end of my masters and some of my ex-colleagues have an average salary for their experience by working for consulting companies, and others work at amazing companies and startups, getting salaries and professional perks that the average IT Senior in Portugal can’t get. So a masters degree (and up to a point even a bachelor) is definitely not necessary to earn a good or great salary.&lt;/p&gt;
&lt;p&gt;On top of that, a lot of startups and multinational companies still don’t seem to consider a masters degree a critical factor, even though there are still some who require it in specific areas when regarding research or innovation job positions.&lt;/p&gt;
&lt;p&gt;Moreover, along the years when talking with someone with a bachelor or masters degree, I haven’t noticed a big knowledge gap (if any at all) between the two groups. This can easily be explained by the fact that bachelor degrees tend to focus more on the basics of computer science, algorithms and software engineering, and masters programmes tend to focus more on a subset of those topics.&lt;/p&gt;
&lt;h2 id=&#34;what-about-what-i-learnt&#34;&gt;What about what I learnt&lt;/h2&gt;
&lt;p&gt;A masters degree wasn’t so impactful in my professional life as my bachelors was but I still learnt a lot in this degree. I was exposed to languages and tools that I doubt I would ever be if I didn’t apply for a Masters degree.
It is always good to learn about topics that even if they are not your main interests, may be useful in the future, as you will already know where to start if you need to work with them.&lt;/p&gt;
&lt;p&gt;As we all agree in the need of continuous learning in our field, some people consider that today’s educational system is obsolete, or at least is having problems adapting to the sudden change that easy and affordable internet access has introduced. By providing almost instant, and sometimes free, access to different forms of content (ex: books, articles, videos), many students don’t feel the need to attend classes, as teachers and libraries stopped being the only source of information and the same knowledge can be obtained by researching it online.&lt;/p&gt;
&lt;p&gt;That’s where websites like &lt;a href=&#34;http://www.coursera.org/&#34;&gt;coursera&lt;/a&gt;, &lt;a href=&#34;http://www.udemy.com/&#34;&gt;udemy&lt;/a&gt; and &lt;a href=&#34;http://www.udacity.com/&#34;&gt;udacity&lt;/a&gt; come into play. They are interesting in the sense that they provide content in many different forms, costs and topics that universities can’t provide, with the added value of letting the student start when it wants.&lt;/p&gt;
&lt;p&gt;However they are not by any means a substitution to traditional college degrees. Even though they work as a really good complement to the academic life, they don’t provide the same academic background as the former. It’s academic institutions and international educational agreements that are recognised and not a mere course from an online website.&lt;/p&gt;
&lt;h2 id=&#34;so-was-it-worth-it&#34;&gt;So, was it worth it&lt;/h2&gt;
&lt;p&gt;It’s hard to say. It will take some years to understand if it was a good investment, both financial as timewise. As what cost me the most, was not the money that I spent (approximately 2k€ for both years of tuition) but the amount of money that I didn’t earn,that with my calculations would be above 20k€ if I kept the same base salary both years, which probably wouldn’t happen.&lt;/p&gt;
&lt;p&gt;But there is something else we tend to forget when we discuss about our field. The public sector. Over the years, state jobs for graduates have been increasing academic requirements. As an example, a recent introduction of an educational reform that forbid teachers without a PhD to lecture, made me witness some of the best teachers I had in my life quit teaching because they didn’t fulfil those academic requirements.&lt;/p&gt;
&lt;p&gt;To conclude, I can’t predict if a masters degree will be crucial in the rest of my professional life, as I may work in places that don’t take it into account.&lt;/p&gt;
&lt;p&gt;But a masters degree definitely gives me more options.&lt;/p&gt;
&lt;p&gt;And I love options.&lt;/p&gt;
&lt;h2 id=&#34;side-note&#34;&gt;Side note&lt;/h2&gt;
&lt;p&gt;This post focused more on the transition between a bachelor to a masters programme, as I think a bachelor degree is very important in any field. However there are a set of IT professionals that don’t even have that, and it worries me how some of those even introduce themselves proudly, as college dropouts.&lt;/p&gt;
&lt;p&gt;As if dropping out of college would put them in the same level of recognition and personal realisation as Mark Zuckerberg or Bill Gates who early realised that a college degree wouldn’t fulfil their professional needs. It’s important to realize that these people are an exception, not the rule.&lt;/p&gt;
&lt;p&gt;Now, don’t get me wrong. Dropping out of college, can happen for a lot of reasons. From economical needs, to health or family problems, or even if you want to start a new business. Those are all valid counter points that I agree with but quitting school simply to earn money by joining a company, when you don’t have the need to, isn’t one of them. That is simply a sign of laziness and lack of commitment.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Thanks to João Junceira and Marco Talento for reviewing this article.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>From mono to clean</title>
      <link>https://fmendes6.com/posts/16-08-16-mono_to_clean/</link>
      <pubDate>Tue, 16 Aug 2016 00:00:00 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/16-08-16-mono_to_clean/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Why pivotal is great</title>
      <link>https://fmendes6.com/posts/16-05-16_pivotal/</link>
      <pubDate>Mon, 16 May 2016 10:30:11 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/16-05-16_pivotal/</guid>
      <description>&lt;p&gt;At the end of last February, the Android developers youtube channel launched a new series called Pivotal where Reto Meier screencasts a way how to build a simple location-based app.&lt;/p&gt;
&lt;p&gt;There is only one &lt;a href=&#34;https://www.youtube.com/watch?v=mvhKjh5D1WQ&#34;&gt;video&lt;/a&gt; out as for now, but the content looks promising in several ways. Not only because as Reto says “&lt;em&gt;There’s a thousand ways in which this implementation is wrong, and the end of the video explains some of why everything should be done differently&lt;/em&gt;” but also, and mainly, because it shows that everyone makes mistakes. And by mistakes I mean silly mistakes.&lt;/p&gt;
&lt;p&gt;When I was teaching Android app development, there was one student who was constantly asking me how I was able to understand his code faster than he himself and how I could figure out solutions to the (previously prepared) final project in no time. And this situation reminded me just how I felt when I started learning how to code.&lt;/p&gt;
&lt;p&gt;When I was younger, I would look up to many of my teachers and considered them genius. They were able to create simple solutions to complex problems in no time. That would intimidate me and almost all of my colleagues, but we were constantly forgetting two things — how experienced the teachers were and the fact that they had prepared all the lessons taking into consideration almost all the possible questions and outcomes.&lt;/p&gt;
&lt;p&gt;Although I was never among the best students (and I am still not), developing and building things I wanted , somehow helped with the feeling of intimidation. Then, along with time and experience, I started noticing that many of my teachers (as well as colleagues) I once considered genius were very good at several things but they would also make mistakes. And that was comforting. Not because it makes me happy that they were wrong but because that gave me hope that I would be able to build (and develop) great products too.&lt;/p&gt;
&lt;p&gt;Many people (especially beginners) tend to forget that most of the content that is available online (videos, SDKs, tools, demos, etc.) takes a long time to create and that the creators behind it had to fail a lot of times to get the product done the “right way”. After all, softwares need updates for a reason, right?&lt;/p&gt;
&lt;p&gt;Going back to Reto Meier (a book author and Google employee who has a deep knowledge of the Android framework) watching him taking 20 minutes to figure out that a Toast wasn’t showing because he had forgotten to invoke &lt;code&gt;.show()&lt;/code&gt; is great. It’s great because it shows that even some of the best people out there make simple mistakes. And that is just fine!&lt;/p&gt;
&lt;p&gt;It’s great to watch Reto and his team publishing how to update a 5–6 year old app with the most recent Android components but watching that even they make mistakes is probably the most powerful message they’ve sent with these video series.&lt;/p&gt;
&lt;p&gt;In the end, what matters is that you build the things you want to build. No matter how long you take or how many mistakes you’d made. As long as you build what you wanted and learn from your mistakes, joy and sense of accomplishment will be on the way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android. More than an UI</title>
      <link>https://fmendes6.com/posts/16-04-15-more_than_ui/</link>
      <pubDate>Fri, 15 Apr 2016 00:00:00 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/16-04-15-more_than_ui/</guid>
      <description></description>
    </item>
    
    <item>
      <title>From monolithic to clean</title>
      <link>https://fmendes6.com/posts/16-03-25_monotoclean/</link>
      <pubDate>Fri, 25 Mar 2016 10:30:11 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/16-03-25_monotoclean/</guid>
      <description>&lt;p&gt;This week I published &lt;a href=&#34;https://speakerdeck.com/fmendes6/from-mono-to-clean&#34;&gt;the talk&lt;/a&gt; I had given on how I evolved from a Monolithic architecture to a Clean Architecture based on &lt;a href=&#34;http://fernandocejas.com/2015/07/18/architecting-android-the-evolution/&#34;&gt;Fernando Cejas proposal&lt;/a&gt; but with a few differences in the domain layer which I would like to explain. I am not saying these are better approaches but just some tweaks that made the data flow and the architecture clearer to me, so take them with a grain of salt.&lt;/p&gt;
&lt;p&gt;The following differences between my implementation and Fernando’s differ in a simple implementation detail. To Fernando, as I can see, a use case instance by itself represents not only a feature of the application but also a feature with concrete values. This way, each use case has its values passed through the constructor following the Command Pattern to execute it.&lt;/p&gt;
&lt;p&gt;We can all agree that this approach may seem to make sense at first but when implemented in some situations, it is not clear about how things should be done. But before I explain my implementation differences, let me first comment on some of his:&lt;/p&gt;
&lt;h2 id=&#34;comment-1&#34;&gt;Comment #1&lt;/h2&gt;
&lt;p&gt;In his implementation of the &lt;code&gt;UserDetailsActivity&lt;/code&gt;, the userId is passed to the presenter through a &lt;code&gt;UserModule&lt;/code&gt; (with Dagger 2) and then to the constructor of the use case which doesn’t seem natural. This works well in this particular use case but it is not clear on how would we perform an action in a list of items. For instance how could this be achieved in an activity where we have the option to Like a comment in a list of comments? Maybe through the instantiation of a &lt;code&gt;LikeCommentUseCase&lt;/code&gt; object and passing it to the presenter via method call instead of its constructor?&lt;/p&gt;
&lt;h2 id=&#34;comment-2&#34;&gt;Comment #2&lt;/h2&gt;
&lt;p&gt;In the domain layer each use case knows which thread will subscribe the data and which will observe its result. But why is it so? Presentation layers (like Android) have threading concerns and not domain layers.&lt;/p&gt;
&lt;h2 id=&#34;comment-3&#34;&gt;Comment #3&lt;/h2&gt;
&lt;p&gt;Mapping the list of users from the domain model to the presentation model is done on the UI thread instead a worker thread. This is because the &lt;code&gt;UseCase&lt;/code&gt; class doesn’t expose its observable although I think that in the current implementation it makes sense not to do so.&lt;/p&gt;
&lt;p&gt;Therefore, I would suggest a little difference on his implementation of a use case. Each use case is a simple method contained in an operations related class than in a class of its own (ex: &lt;code&gt;UserService&lt;/code&gt; which would contain &lt;code&gt;getListUsers()&lt;/code&gt;, &lt;code&gt;getUserDetails()&lt;/code&gt;, etc). Why? Let’s see some of my arguments:&lt;/p&gt;
&lt;h2 id=&#34;difference-in-1&#34;&gt;Difference in #1&lt;/h2&gt;
&lt;p&gt;With a &lt;code&gt;UserService&lt;/code&gt; I only need to invoke the following method in an activity &lt;code&gt;presenter.loadUserDetails(userId)&lt;/code&gt; and then the presenter would invoke &lt;code&gt;userService.loadUserDetails(userId)&lt;/code&gt; which seems to me not only clearer but also easier to follow the data flow. Similarly, if we need to like a comment we would only need to invoke in the presenter, &lt;code&gt;postService.likeComment(postId)&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;difference-in-2&#34;&gt;Difference in #2&lt;/h2&gt;
&lt;p&gt;The domain layer doesn’t need to know that there are subscribers to its data. Instead, it should only provide the necessary common domain logic by communicating with the repositories as well as with other use cases if necessary. Subscriptions and unsubscriptions are to me a presentation problem (Android) and should be treated there (due to the UI lifecycle) as well as threading manipulation, I therefore moved them to the presenters. So each service (ex: userService) only exposes operations that return Observable.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;PostService&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;implements&lt;/span&gt; IPostService&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;

    IPostRepository mRepository&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;PostService&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;IPostRepository mRepository&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;mRepository&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; mRepository&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#3c5d5d;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt; Observable&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;Post&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;getPostById&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; postId&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;return&lt;/span&gt; mRepository&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;getPostById&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;postId&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#3c5d5d;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt; Observable&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;List&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;Comment&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;getPostComments&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; postId&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;return&lt;/span&gt; mRepository&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;getPostComments&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;postId&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;difference-in-3&#34;&gt;Difference in #3&lt;/h2&gt;
&lt;p&gt;By accessing the observable through a service on the presenter, we could map the data still in the IO thread instead of the main thread:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;HomePresenter&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;implements&lt;/span&gt; IHomePresenter&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;

    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;private&lt;/span&gt; IHomeView mView&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;private&lt;/span&gt; IPostService mService&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;private&lt;/span&gt; IMapper&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;Post&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;PostView&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; mPostMapper&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;private&lt;/span&gt; IMapper&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;Comment&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;CommentView&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; mCommentMapper&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;HomePresenter&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;IHomeView mView&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; IPostService mService&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; IMapper&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;Post&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; PostView&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; mPostMapper&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; IMapper&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;Comment&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; CommentView&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; mCommentMapper&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;mView&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; mView&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;mService&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; mService&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;mPostMapper&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; mPostMapper&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;mCommentMapper&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; mCommentMapper&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;loadPost&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; postId&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
        mService&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;getPostById&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;postId&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;subscribeOn&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;Schedulers&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;io&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;())&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;new&lt;/span&gt; Func1&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;Post&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; PostView&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#3c5d5d;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt; PostView &lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;call&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;Post post&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;return&lt;/span&gt; mPostMapper&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;transform&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;post&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;})&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;observeOn&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;AndroidSchedulers&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;mainThread&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;())&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;subscribe&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;new&lt;/span&gt; Subscriber&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;PostView&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#3c5d5d;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;onCompleted&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{}&lt;/span&gt;

                &lt;span style=&#34;color:#3c5d5d;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;onError&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;Throwable e&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                    mView&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;onError&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;getLocalizedMessage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;

                &lt;span style=&#34;color:#3c5d5d;font-weight:bold&#34;&gt;@Override&lt;/span&gt;
                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;onNext&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;PostView postView&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                    mView&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#008080&#34;&gt;onPostLoaded&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;postView&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;});&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Designing and architecting software systems is all about tradeoffs. I honestly think that with my approaches I made it clearer and with a better separation of concerns, resulting in a loss of a considerable amount of abstraction compared to Fernando’s approach.&lt;/p&gt;
&lt;p&gt;Keep in mind that my presentation focused solely on the architecture side, and not on concepts like offline-online data sync, dependency injection, testing, etc. Therefore, the repositories I added to my github don’t have those concepts implemented although I would recommend you to see Fernando’s Clean Architecture repository if that is what you are looking for.&lt;/p&gt;
&lt;p&gt;To conclude, I would like to thank great developers like Romain Piel, Jake Wharton, Hannes Dorfmann and Israel Ferrer whose blogposts helped me to achieve this evolution and also many others responsible for moving the community forward, especially, Fernando Cejas for writing that blog post which helped me change the way I architecture my apps.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Xamarin Impressions - Part II</title>
      <link>https://fmendes6.com/posts/15-04-18_xamarin_ii/</link>
      <pubDate>Sat, 18 Apr 2015 10:30:11 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/15-04-18_xamarin_ii/</guid>
      <description>&lt;p&gt;It has been a while since &lt;a href=&#34;https://fmendes6.com/posts/14-04-10_xamarin/&#34;&gt;my last blog post&lt;/a&gt; about Xamarin and I feel this is the time to write something more about it. Although I haven’t been working with Xamarin for some months, I will write here some questions people often asked me when I was full-time working with it:&lt;/p&gt;
&lt;h4 id=&#34;have-you-used-any-java-library-directly-how-easy-is-it-to-use-them&#34;&gt;Have you used any java library directly? How easy is it to use them&lt;/h4&gt;
&lt;p&gt;First of all, let me say that Xamarin itself created a github account with many samples some of which have Android API wrappers for C# of popular java libraries (ex: ActionBarSherlock) which is worth checking out.&lt;/p&gt;
&lt;p&gt;One of the requirements I had concerning the project was its feature of uploading files from the device to the server and I knew it wouldn’t be easy especially due to the Documents API introduced in Android 4.4.&lt;/p&gt;
&lt;p&gt;I decided to implement it using the &lt;a href=&#34;https://github.com/iPaulPro/aFileChooser&#34;&gt;aFileChooser&lt;/a&gt; library which could solve this problem with ease. However, there was no port available as a Xamarin component, so I had to implement the wrapper myself following the &lt;a href=&#34;http://developer.xamarin.com/guides/android/advanced_topics/java_integration_overview/binding_a_java_library_%28.jar%29/&#34;&gt;Xamarin Tutorials&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The process is allegedly automatic and straightforward although we may need to describe some transformations in XML files due to the differences between both languages (Java and C#). As far as I remember, in the whole library I had to describe only two transformations regarding C#’s lack of covariance in method return types.&lt;/p&gt;
&lt;p&gt;It was a bit messy in the beginning but it turned out to be easier than what it could actually be. Mostly thanks to the help of the Xamarin community with many similar examples available online. The whole forum works really well and there are many people with a deep knowledge of the platform ready to help anyone.&lt;/p&gt;
&lt;h4 id=&#34;what-about-libraries-do-you-usually-use-them&#34;&gt;What about libraries? Do you usually use them&lt;/h4&gt;
&lt;p&gt;Of course! The Xamarin website provides developers with a lot of small libraries (assemblies) available to download and ready to use. Check them out &lt;a href=&#34;http://components.xamarin.com/&#34;&gt;here&lt;/a&gt;!&lt;/p&gt;
&lt;h4 id=&#34;any-other-obstacles-you-have-had-so-far&#34;&gt;Any other obstacles you have had so far&lt;/h4&gt;
&lt;p&gt;I don’t want to go into details here, but there where some problems while adding some external libraries (as well as with web services). I had to add some configurations to the linker options to avoid crashes in release mode. It is a fairly simple process once you know it but it is something I would had preferred not to go through.&lt;/p&gt;
&lt;p&gt;However, if you only need to make a simple aplication that communicates with a REST API and stores some data persistently, you can simply use RestSharp together with SQLite.NET (or other reliable alternatives) and you won’t have to go through any of these I mentioned before. It really depends on what type of features and libraries you need to use, so there is no need for panic.&lt;/p&gt;
&lt;p&gt;Keep in mind that not all frameworks and projects that are available in C# (outside of the Xamarin platform) can be used in a Xamarin.Android project so I recommend you to check its compability first here: &lt;a href=&#34;http://scan.xamarin.com/&#34;&gt;http://scan.xamarin.com/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;if-you-could-choose-which-language-would-you-chose-for-development&#34;&gt;If you could choose, which language would you chose for development?&lt;/h4&gt;
&lt;p&gt;It is not an easy decision but once you start “Squarifying” your apps (I mean, using Square’s open source libraries) it’s hard to go back even though C# looks less verbose and sometimes is easier to develop on.&lt;/p&gt;
&lt;p&gt;Although it depends on the restrictions of the app (enterprise or personal), keep in mind that Xamarin is paid, which is a big con for indie developers.&lt;/p&gt;
&lt;p&gt;The whole Android ecossystem evolves much faster in Java, and Xamarin has been catching it surprisingly fast but I am afraid that a great amount of community libraries that are being released now in Java may never see the daylight in Xamarin.&lt;/p&gt;
&lt;p&gt;As a final note, I have to say that some of Xamarin updates can be troublesome with Visual Studio. What is more, I experienced several freezes while loading the project on startup, which is something that frustrated me a lot.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why teaching makes us better developers</title>
      <link>https://fmendes6.com/posts/15-01-23_teaching/</link>
      <pubDate>Fri, 23 Jan 2015 10:30:11 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/15-01-23_teaching/</guid>
      <description>&lt;p&gt;Two months ago during one of my normal days at the office I was told that there was a private school looking for android developers that were available to teach. That school needed someone for 3 times a week (for a 66 hour course) and my boss asked me if I wanted to take the opportunity. The course consisted in a 24h Java introduction, 24h for Android and 18h for a project.&lt;/p&gt;
&lt;p&gt;I was caught off guard. I always enjoyed doing what I do but teaching it to somebody else? As someone that suffers from the &lt;a href=&#34;https://medium.com/@aliciatweet/overcoming-impostor-syndrome-bdae04e46ec5&#34;&gt;imposter syndrome&lt;/a&gt;, I often asked myself if I was really adequate to teach someone, even let alone a whole classroom. I wasn&amp;rsquo;t sure if I had taken the right decision but I decided to take the risk and challenge myself.&lt;/p&gt;
&lt;h2 id=&#34;java-module-first-weeks&#34;&gt;Java Module (First weeks)&lt;/h2&gt;
&lt;p&gt;Those first days when you meet the students (in my case, I had 6) and they are reluctant to talk to You are crucial. If you manage to gain their trust, the class is yours. However, it’s easier said than done.&lt;/p&gt;
&lt;p&gt;The first lesson was horrible. I finished all my slides in 30 mins when they should had lasted at least double that time. Fortunately the breaks were a bit longer than what I expected so it all turned out to be fine but it made me realize how badly prepared materials can ruin a lesson.&lt;/p&gt;
&lt;p&gt;From that day on, the lessons started to get better for several reasons. I managed to spend more time doing practical exercises than reading slides. By doing exercises on lessons, I was distributing the time more efficiently and at the same time, making sure that the students are learning the fundamental concepts as well as helping them and building a professional relationship with each one.&lt;/p&gt;
&lt;h2 id=&#34;android-module&#34;&gt;Android Module&lt;/h2&gt;
&lt;p&gt;Since the moment I was invited to teach the course, I was very concerned about the transition between the Java Module and the Android Module. Almost all of my students had no previous professional experience so while teaching 24 hours of Java was ok, jumping to a framework as powerful as the android (that is constantly evolving) would be too hard for the students so I had to make sure this transition was as smooth as possible.&lt;/p&gt;
&lt;p&gt;However, everything changed in the first lesson. Three new students shown up with a much higher knowledge background (because they had professional experience), resulting in a big knowledge gap between them and the other students which made this module the hardest one to prepare.&lt;/p&gt;
&lt;p&gt;I had to make a decision at this point, I could either prepare the course with more materials in a shorter time for it to be challenging for the new students or I could only teach the very basic to make the lessons more accessible to the big group. Given the circumstances, I decided for the first option because I realized that I could take advantage of the Project Module to correct and re-teach some of the topics (if necessary) to the bigger group. Since I had to prepare the lessons, I decided to re-read most of android’s documentation that I hadn’t read since I started to learn it at the university.&lt;/p&gt;
&lt;p&gt;This turned out to be a better exercise than I thought because the documentation had been updated with new API’s, deprecated methods and tutorials were (and still are) better than before.
Another thing that I liked was that by preparing examples for my students, I learnt about how some components can be a better choice in terms of performance when comparing to others (ex: differences between ViewGroups) which made me rethink some of my development choices nowadays.&lt;/p&gt;
&lt;h2 id=&#34;final-project&#34;&gt;Final Project&lt;/h2&gt;
&lt;p&gt;In this last module, I had two options. I could either ask the students to develop any app they wanted or make them develop an app that I wanted. I chose the latter because this way I could make them use almost all the components I taught in classes while making sure everyone had the same goals, tasks and starting points.&lt;/p&gt;
&lt;p&gt;However, I was surprised to see that some of the students were in a worse condition than I thought due to the difficulty of the last module. At this point, I had no other option than helping them more than I was supposed to. Despite that, some of the students were still able to develop autonomously and discuss abstract solutions with me, which made me genuinely happy.&lt;/p&gt;
&lt;p&gt;Moreover, reading the final project’s report from one of the students and noticing that he added more functionalities and components he thought were needed was really important because it shows that he took the time to develop the application with everything he considered necessary instead of just doing the obligatory. Seeing someone develop an android application when one month and a half before couldn’t understand a java file, was the most rewarding thing to me as a teacher.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If there is any advicesI can give to anyone is that if you promptly answer the students questions/emails and help them when they need, students give you more room to make a mistake, as long as you recognize and correct it as soon as possible. Don’t be afraid to listen to them because even if You don&amp;rsquo;t have the right answer, the fact that you take the time to help them is enough to keep their attention and enthusiasm.&lt;/p&gt;
&lt;p&gt;Moreover, very often students get discouraged when they see us, developers, implement simple and fast solutions to their problems. It’s very important (if not mandatory) to make them understand that we were once like them and nobody is born with experience.&lt;/p&gt;
&lt;p&gt;As a final note, I have to say that it was a great experience that I recommend to everyone. Even if you are not teaching at a school, you can always do some small sessions in your office with your colleagues about newly created API’s , tools, etc. and you will realize that by helping others you are actually helping yourself.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Udacity&#39;s UX for Mobile Developers</title>
      <link>https://fmendes6.com/posts/14-08-03_udacity/</link>
      <pubDate>Sun, 03 Aug 2014 10:30:11 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/14-08-03_udacity/</guid>
      <description>&lt;p&gt;Now, first of all let me tell you that I have never done any online course before. I knew about Udemy, Code Academy and even Coursera (where I was planning to start one) but Udacity’s course caught my attention because the lecturers are employees from Google. Another reason that grabbed my attention was the fact that it was about User Experience with a focus on Android, a theme that I am passionate about but which I have never seen in any other website.&lt;/p&gt;
&lt;p&gt;In this blog post I will write about my experience with Udacity’s UX For Mobile Developers online course, to be more precise I am going to talk about their lessons, quizzes, assignments, etc.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“In this short course, you&amp;rsquo;ll step back from your IDE and dive into the techniques that great designers use to plan and prototype amazing apps before any code is written”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is the course’s summary with an approximate completion time of 4 weeks with 6hr/week work commitment. I was (and still am) working full-time as an android developer, taking driving lessons, having English lessons twice a week and, indeed, I took exactly that amount of time to complete the course. I would say you don’t need that much time to finish the course.
Additionally, the fact that I have had an idea for the final project since the beginning saved me a certain amount of time.&lt;/p&gt;
&lt;p&gt;Now, about the content itself. I can easily say that the best part of the course are its lessons. The videos have an average duration of 2 minutes or less which is perfect because you don’t have to spend a lot of time on watching them. We can basically watch them any time of a day without getting distracted because each one finishes in no time. In my opinion, if the videos took longer than 4 or 5 minutes, I would have no patience to go through all the lessons.&lt;/p&gt;
&lt;p&gt;At the end of some of the lessons, the student is asked to take a &lt;em&gt;quiz&lt;/em&gt; (a multiple choice one or one in which you need to enter the answer). This helped me feel that I am actually working on something and not just watching videos all the time. Even if you fail the quiz the system explains why your answers were incorrect (therefore you learn also thanks to a failure).&lt;/p&gt;
&lt;p&gt;As far as I know, the ssignments at the end of each lesson are only available for the course subscription members (150$/month) who I was and still am at the moment.
Together with the subscription, you will get a full-time udacity’s coach that promptly writes you an email asking whether you need something that he can help with. In the same email he asks you if you whether you want to make a brief Skype call so that he can help you reach your goals in a more effective way. My coach was Jay Harman and one week after the first call, he wrote me to know how my progress was going and asked me whether there was something he could do for me, which is great.&lt;/p&gt;
&lt;p&gt;Now back to the assignments. This part is a bit different from the rest of the lessons. The assignment videos are made by the course designer (in this case, Andy Brown) and they are where the real work starts. In the majority of the assignments, you will be asked to analyze, compare and answer how to improve high rated and low rated apps. You will be also asked to do prezi presentations about the topics of the lessons, which usually doesn&amp;rsquo;t take you longer than 15/20 minutes to do, and some of them take even less time.&lt;/p&gt;
&lt;p&gt;However, when you reach the end of lesson 2, you start to work on your final project. It consists of a prezi presentation for an app that you have to design, and in which you need to apply everything you have learnt. Since this is something on which you spend more time during the course, the lecturers encourage you to share your answers with the community on the forums, in order to promote the discussion and learn each other&amp;rsquo;s ideas.&lt;/p&gt;
&lt;h2 id=&#34;final-thoughts&#34;&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;I can honestly say that I really enjoyed participating in this course. Topics such as low-res wireframes, personas,use cases, context awareness, etc.  are a powerful tool for any developer that wants to make their apps more engaging and immersive. Simple changes such as &amp;lsquo;Google+ sign in&amp;rsquo; as opposed to a sign in form make a huge difference to the user. In one of the assignment you even learn how much an app would (approximately) improve its rating if it had respected the mobile constraints.&lt;/p&gt;
&lt;p&gt;However, I think there still remains a room left for an improvement. The fact that we have learnt all the concepts through designing an app from the ground up (the pizza app) during the lessons was a great pro but I was hoping that in the end of all the lessons there would be an extra video explaining how a real world app like Google Keep or Google Music was designed. This would be a major change that, to my mind, could be done in the course..&lt;/p&gt;
&lt;p&gt;The last thing I was not a big fan of was Andy Brown’s voice. Don’t take me wrong here, he explained the assignments in a very clear and objective way but there was something that was still missing as compared to the lesson videos. Was it the happy and animated voice from Nazmul Idris and Izabel Grey? This shall probably remain a mistery.&lt;/p&gt;
&lt;p&gt;To resume, I loved and I do recommend this course.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>10 Android layout tips for beginners</title>
      <link>https://fmendes6.com/posts/14-05-26_tips/</link>
      <pubDate>Mon, 26 May 2014 00:00:00 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/14-05-26_tips/</guid>
      <description>&lt;p&gt;Therefore, this post is the first one from a series of tips I would like to give to everyone who is just starting to develop applications for Android. The tips will be based on my experience and on what I&amp;rsquo;ve learnt from more experienced developers over the time.&lt;/p&gt;
&lt;p&gt;So without further ado, let&amp;rsquo;s start:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always use shapes (circles and squares) drawn in xml, whenever you can, for performance / flexibility reasons. It is always better to have an oval shape than several png/jpg files with circles.&lt;/li&gt;
&lt;li&gt;Forget about px and AbsoluteLayout as a measure  because they are not your friends, unless you are developing for a single device. And even in such case, it is not advised to use them!&lt;/li&gt;
&lt;li&gt;Replace all the occurrences of fill_parent (deprecated on API 8)  with match_parent. There are still many examples on the internet with it, when in fact they shouldn’t be used anymore.&lt;/li&gt;
&lt;li&gt;Learn how to use RelativeLayout because you will feel amazed with its flexibility when you need to position its child views. Layout_below, layout_above, layout_toLeftOf, centerInParent ( etc. ) can be really handy sometimes.&lt;/li&gt;
&lt;li&gt;Use LinearLayout when you need to perfectly distribute the space available. For instance, to distribute 3 circles evenly (horizontally or vertically) declare weigthSum = 0.3 on the LinearLayout and then set layout_weigth = 0.1 on each of the 3 children views.&lt;/li&gt;
&lt;li&gt;When dealing with icons, use wrap_content in both width and height of the ImageView and then use margins and paddings to reposition it wherever you within the layout. Remember that if you use match_parent the image will stretch itself, which can lead to poor visual results.&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&#34;http://romannurik.github.io/AndroidAssetStudio/&#34;&gt;Google’s tools&lt;/a&gt; to generate icons for the various screen dimensions in case you have them only in one size.&lt;/li&gt;
&lt;li&gt;Avoid setting fixed dimensions on the layout files (ex: layout_margin = 26dp ). Learn how to use the dimens.xml files to set different sizes,paddings and margins for the various densities. This is especially handy because In case you need to make a small adjustment to a particular screen density (or even add a new density like xxhdpi), you just need to edit the dimens.xml file on the corresponding values folder and not the whole layout file.&lt;/li&gt;
&lt;li&gt;Use styles.xml files to define a particular style for a view. For instance, if you have a big form with a lot of edittexts with a specific border and background color, define a style on the styles.xml file and then reference it on the corresponding layout file. This will clean your layout code substantially.&lt;/li&gt;
&lt;li&gt;Write comments on the strings, styles and colors files to help you and your team know where those values are being referenced.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a final note, I highly recommend you to use the preview tab available on Android Studio / IntelliJ. Seriously.
This is probably the best advice anyone can give you. It will help you understand how views will be displayed when you are still writing their xml code.&lt;/p&gt;
&lt;p&gt;PS: Did you know that a Button is a Textview just with a different style? Check the source code &lt;a href=&#34;android.googlesource.com/platform/frameworks/base/+/refs/heads/master/core/java/android/widget/Button.java&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Xamarin First Impressions</title>
      <link>https://fmendes6.com/posts/14-04-10_xamarin/</link>
      <pubDate>Thu, 10 Apr 2014 00:00:00 +0100</pubDate>
      
      <guid>https://fmendes6.com/posts/14-04-10_xamarin/</guid>
      <description>&lt;p&gt;It has been 13 months since I started developing for Android and until now I have been using eclipse/IntelliJ as my IDEs, however, a new professional commitment made me to develop for Android using Xamarin and this blog post discusses my first impressions that i’ve experienced as an Android developer with Xamarin.&lt;/p&gt;
&lt;p&gt;“With Xamarin, you write your apps entirely in C#, sharing the same code on iOS, Android and Mac” is Xamarin’s moto as a platform to develop iOS and Android with C# instead of Objective-C or Java respectively.&lt;/p&gt;
&lt;h4 id=&#34;but-why-developing-with-c-xamarin-instead-of-developing-with-the-language-that-android-was-designed-for&#34;&gt;But why developing with C# (xamarin) instead of developing with the language that Android was designed for&lt;/h4&gt;
&lt;p&gt;Although one reason may be that the developers are not familiar with Java, the most important (in my opinion) is the possibility of developing with the benefits that C# has over Java (delegates,linq,async operations,etc.). After all, i can assure you that the code looks clearer and is easier to develop.&lt;/p&gt;
&lt;p&gt;On the other hand, it enables us to develop the application core (business logic and data access) that is separated from the UI, and gives us the possibility to reuse that code within various client applications (Android, Windows, iOS).&lt;/p&gt;
&lt;h4 id=&#34;well-ok-buthow-does-it-work&#34;&gt;Well ok but&amp;hellip;How does it work&lt;/h4&gt;
&lt;p&gt;Xamarin lets us to develop everything with C# as long as we know how does the whole Android ecosystem works. It is necessary to understand the 4 basic components (Activity, Services, Broadcast Receivers and Content Providers) and how they work together. Even the types and methods are named same as in Java so that the only difference is the language in which one develops.&lt;/p&gt;
&lt;p&gt;However, as someone who usually develops in Java, I realized quite quickly that a slight learning curve which was one of the noticeable differences. This was the use of custom attributes in activities in order to define their attributes (that is name, screen orientation, etc) instead of defining them in the manifest file. Also, as I noticed, there is a use of Properties instead of setter methods as in Java (ex: button.click += delegate {&amp;hellip;} instead of button.setOnClickListener(&amp;hellip;))&lt;/p&gt;
&lt;h4 id=&#34;wow-that-seems-cool-so-how-do-we-start&#34;&gt;Wow! That seems cool! So how do we start&lt;/h4&gt;
&lt;p&gt;That is where the problems begin&amp;hellip;&lt;/p&gt;
&lt;h4 id=&#34;visual-studio&#34;&gt;Visual Studio&lt;/h4&gt;
&lt;p&gt;I decided to start with Visual Studio since it is an IDE that I like a lot and that I had installed already because of my previous projects. The only necessary thing was to add a plugin (available for business accounts only).&lt;/p&gt;
&lt;p&gt;After installing the plugin it is necessary to associate the business account with the Visual Studio int the menu options. The problem was that those options didn’t open because of a plugin error. After more than one hour (thanks to the deletion of one entry in the system registry), I managed to configure the account and deploy an Android application to my Nexus 4. But instantly Visual Studio warned me that LogCat would not be available for that application.&lt;/p&gt;
&lt;p&gt;After this warning, I gave up with Visual Studio and decided to give Xamarin Studio a try.&lt;/p&gt;
&lt;h4 id=&#34;xamarin-studio&#34;&gt;Xamarin Studio&lt;/h4&gt;
&lt;p&gt;At first glance it seems to be a fast and simple to use IDE. Without any greater difference from the other IDEs, it doesn’t require a great learning curve, which is good!&lt;/p&gt;
&lt;p&gt;The first weird crash that occurs is related to the save file operation. From this point on, the sporadic weird crashes started to occur more frequently although on simple and fast IDE reset solved the issue.&lt;/p&gt;
&lt;p&gt;By the time I started to develop my own layouts, i realized that the IDE has no auto-complete feature in the XML files (or AXML as Xamarin “calls” it).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SH*T.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Being an avid user of the auto-complete feature, since it helps with productivity, I perceived the above as a problem.&lt;/p&gt;
&lt;p&gt;After a short research on the Xamarin forums, I learnt that some users find it possible to turn this feature on but only if we open it with a right-click and choose “Source Code Editor” (instead of a typical double-click on the .axml file). This way we enable auto-complete only on the attributes (but not on their values).&lt;/p&gt;
&lt;p&gt;However, opening it with “Source Code Editor” removes the “Design” tab. That makes it necessary to double-click the file (again) to access and view the result.&lt;/p&gt;
&lt;p&gt;This means that double clicking the file enables us to access the design tab and the source tab without auto-complete. Opening with “Source Code Editor” provides us with auto-complete but without the design tab. This did not appear as productive to me&amp;hellip;&lt;/p&gt;
&lt;p&gt;Then my co-workers suggested me an interesting solution. We shall use Android Studio (or IntelliJ) to develop the layouts, (taking advantage of the awesome “preview” tab that enables us to edit a layout file and looking at the results in real time) and then copy the above to xamarin studio, since those XML files are defined with the same rules and definitions.&lt;/p&gt;
&lt;p&gt;Of course, keeping both IDEs opened together with chrome and other apps at the same time, demands at least a system with 8GB of RAM so that the development is prompt and possible at all.&lt;/p&gt;
&lt;h4 id=&#34;hum-ok-is-there-anything-more-that-we-should-learn&#34;&gt;Hum OK&amp;hellip; Is there anything more that we should learn&lt;/h4&gt;
&lt;p&gt;Well yes, there is. If you are thinking about using 3rd party Java libraries (.JAR) or Java projects, then you have several ways to do it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Converting them manually;&lt;/li&gt;
&lt;li&gt;Using code converters&lt;/li&gt;
&lt;li&gt;Using the Java Native Interface;&lt;/li&gt;
&lt;li&gt;Through a specific library that defines the mapping between Java and C# (Java Binding Library).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All these options are well described on Xamarin official website.&lt;/p&gt;
&lt;h4 id=&#34;wellwith-so-many-problems-is-xamarin-still-worth-it&#34;&gt;Well&amp;hellip;with so many problems is Xamarin still worth it&lt;/h4&gt;
&lt;p&gt;This decision can only be made by you. Nevertheless, if you are planning to share code across multiple mobile OSs, then Xamarin seems to be a really good option for me, even with the mentioned limitations in mind, as long as we use it together with Android Studio/IntelliJ to design the layouts :P&lt;/p&gt;
&lt;p&gt;That is all for today. In the following weeks, I am going to write another blog post. This time enriched by a greater experience with Xamarin. So shall we keep in touch? :)&lt;/p&gt;
&lt;h4 id=&#34;update-22062014&#34;&gt;Update (22/06/2014)&lt;/h4&gt;
&lt;p&gt;With Visual Studio 2013 (12.0 update 2 at least) and the Xamarin plug-in everything seems to work well! No weird crashes, the logging works perfectly and additionally it has got an intellisense for C# code, which Xamarin Studio hasn’t got. I had been using Visual Studio 11 by the time I had written this post so maybe there was some problem with it.&lt;/p&gt;
&lt;p&gt;From now on, I would recommend Visual Studio 12 and Android Studio.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
